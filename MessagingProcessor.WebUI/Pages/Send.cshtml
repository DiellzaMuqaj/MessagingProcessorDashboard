@page
@inject IConfiguration Configuration
@model SendModel
@{
    ViewData["Title"] = "Send Message";
}

<h2>Send Message</h2>

<div class="card p-4 shadow-sm">
    <form id="messageForm">
        <div class="mb-3">
            <label for="type" class="form-label">Type</label>
            <select id="type" class="form-select" required>
                <option value="SMS">SMS</option>
                <option value="Email">Email</option>
                <option value="PushNotification">Push Notification</option>
            </select>
        </div>
        <div class="mb-3">
            <label for="recipient" class="form-label">Recipient</label>
            <input type="text" class="form-control" id="recipient" required />
        </div>
        <div class="mb-3">
            <label for="content" class="form-label">Content</label>
            <textarea class="form-control" id="content" rows="4" required></textarea>
        </div>
        <div class="mb-3">
            <label for="priority" class="form-label">Priority</label>
            <select id="priority" class="form-select">
                <option value="1">High</option>
                <option value="2" selected>Medium</option>
                <option value="3">Low</option>
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
        <div id="responseMessage" class="mt-3"></div>
    </form>
</div>

@section Scripts {
    <script>
        window.apiBaseUrl = "@Configuration["ApiBaseUrl"]";
        const API_BASE_URL = window.apiBaseUrl;

        document.getElementById("messageForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const type = document.getElementById("type").value;
            const recipient = document.getElementById("recipient").value;
            const content = document.getElementById("content").value;
            const priority = parseInt(document.getElementById("priority").value);


            const responseDiv = document.getElementById("responseMessage");

            const payload = {
                type,
                recipient,
                content,
                priority
            };

            try {
                const response = await fetch(`${API_BASE_URL}/api/message`, {
                       
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(payload)
                });
                if (response.ok) {
                    const result = await response.json();
                    responseDiv.innerHTML = `<div class="alert alert-success">Message submitted! ID: ${result.id}</div>`;
                } else if (response.status === 400) {
                    const errorData = await response.json();
                    if (errorData.errors) {
                        const messages = Object.entries(errorData.errors)
                            .map(([field, msgs]) => `<strong>${field}</strong>: ${msgs.join(', ')}`)
                            .join("<br>");
                        responseDiv.innerHTML = `<div class="alert alert-danger">${messages}</div>`;
                    } else {
                        responseDiv.innerHTML = `<div class="alert alert-danger">Validation error occurred.</div>`;
                    }
                } else {
                    const message = await response.text();
                    responseDiv.innerHTML = `<div class="alert alert-danger">Error: ${message}</div>`;
                }
            } catch (err) {
                responseDiv.innerHTML = `<div class="alert alert-danger">Unexpected error occurred.</div>`;
            }
        });
    </script>
}
